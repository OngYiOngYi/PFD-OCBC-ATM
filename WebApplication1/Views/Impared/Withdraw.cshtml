@{
    ViewData["Title"] = "Withdraw";
}
@model WebApplication1.Models.User

<!DOCTYPE html>
<html>
<head>
    <title>Withdraw</title>
    <style>
        .withdraw-form {
            max-width: 400px;
            margin: 0 auto;
        }

        .form-group {
            margin-bottom: 20px;
        }

        textarea {
            width: 100%;
            padding: 8px;
            border: 1px solid #ccc;
            border-radius: 5px;
        }

        .button-container {
            display: flex;
            justify-content: space-between;
        }

        .btn {
            padding: 10px 20px;
            border: none;
            border-radius: 5px;
            cursor: pointer;
            transition: background-color 0.3s ease;
        }

        .btn-start {
            background-color: #4caf50;
            color: white;
        }

        .btn-stop {
            background-color: #f44336;
            color: white;
        }

        .btn-submit {
            background-color: #007bff;
            color: white;
        }

        .btn:hover {
            opacity: 0.8;
        }
        body{
            font-family: 'Comfortaa', sans-serif;
        }
        .mains{
            position:relative;
            top:150px;
            display:flex;
            flex-direction:column;
            align-items:center;  
            justify-content:center;
            margin-top:5%;
        }

    </style>
    <link href="https://fonts.googleapis.com/css2?family=Comfortaa:wght@600&family=Merriweather:wght@700&display=swap" rel="stylesheet">
    <script src="https://cdnjs.cloudflare.com/ajax/libs/bodymovin/5.7.8/lottie.min.js"></script>
</head>
<body>
    <div class="easein">
    <div class="mains">
        <header>
            <h1 class="withdraw">Withdraw</h1>
        </header>

        <div class="withdrawtext">
            Please choose an amount to withdraw...
        </div>
    

        
        <div class="container">

            <form id="withdrawForm" asp-controller="Impared" asp-action="WithdrawAmount" method="post" onsubmit="return submitForm()" class="withdraw-form">
                <div class="form-group">
                    <textarea asp-for="Amount" id="result" type="number" name="Amount" placeholder="Enter amount" class="form-control" required></textarea>
                </div>
                <div class="button-container">
                    <button id="start" class="btn btn-start">Start</button>
                    <button id="stop" class="btn btn-stop">Stop</button>
                    <button type="submit" onclick="simulateWithdraw()" class="btn btn-submit">Submit</button>
                </div>
            </form>
        </div>

        <div class="message" id="withdrawmessage">
            <!-- Your success and error message display here -->
        </div>

            <div class="hidden-elements" style="display: none;">
                <!-- Hidden elements -->
                <div class="hidden-div">
                    Do you want to withdraw the amount?
                </div>
            </div>
        </div>
    </div>
    </div>

    <script type="text/javascript">
        // Check if webkitSpeechRecognition is available
        if ('webkitSpeechRecognition' in window) {
            var startButton = document.getElementById('start');
            var stopButton = document.getElementById('stop');
            var resultElement = document.getElementById('result');
            var recognition = new webkitSpeechRecognition();

            // Set properties
            recognition.lang = window.navigator.language;
            recognition.interimResults = true;

            // Event listeners
            startButton.addEventListener('click', () => {
                recognition.start();
                resultElement.textContent = '';
            });

            stopButton.addEventListener('click', () => {
                recognition.stop();
            });

            recognition.addEventListener('result', (event) => {
                let finalTranscript = '';
                for (let i = event.resultIndex; i < event.results.length; ++i) {
                    if (event.results[i].isFinal) {
                        finalTranscript += event.results[i][0].transcript;
                    }
                }
                resultElement.textContent = finalTranscript.trim();
                checkIfNumber(finalTranscript);
            });

            function checkIfNumber(input) {
                // Remove special characters using regular expression
                const cleanedInput = input.replace(/[^0-9a-zA-Z.-]/g, '');
                console.log(cleanedInput);
                if (!isNaN(cleanedInput)) {
                    return true; // Returns true if the cleaned input is a number
                } else {
                    console.log('Not a valid number'); // CHANGE HERE TO THE TEXT TO SPEECH FOR ISAAC TO DO
                    return false; // Returns false if the cleaned input is not a number
                }
            }

            // Function to confirm withdrawal
            function confirmWithdraw() {
                const input = resultElement.value.trim();
                if (checkIfNumber(input)) {
                    const withdrawalConfirmed = confirm('Do you want to withdraw ' + input + '?');
                    if (withdrawalConfirmed) {
                        // If confirmed, show hidden elements
                        document.querySelector('.hidden-elements').style.display = 'block';
                        return true; // Proceed with form submission
                    } else {
                        console.log('Withdrawal canceled by user');
                        return false; // Prevent form submission
                    }
                } else {
                    alert('Please enter a valid number.');
                    return false; // Prevent form submission
                }
            }

            function handleWithdrawalConfirmation() {
                const input = resultElement.value.trim();
                if (checkIfNumber(input)) {
                    const withdrawalConfirmed = confirm('Do you want to withdraw ' + input + '?');
                    if (withdrawalConfirmed) {
                        const confirmRedirect = confirm('Are you sure you want to withdraw ' + input + '?');
                        if (confirmRedirect) {
                            // Redirect to home page
                            window.location.href = '/Home'; // Change '/home' to the desired URL
                        } else {
                            // Reset the page
                            location.reload();
                        }
                    } else {
                        // Reset the page
                        location.reload();
                    }
                } else {
                    alert('Please enter a valid number.');
                    return false; // Prevent form submission
                }
            }

            // Event listener for form submission
            document.getElementById('withdrawForm').addEventListener('submit', function (event) {
                event.preventDefault(); // Prevent default form submission

                // Call confirmWithdraw() to handle the submission
                if (confirmWithdraw()) {
                    // You can optionally submit the form here if needed
                    // For example: this.submit();
                }
            });
        } else {
            // Handle cases where webkitSpeechRecognition is not available
            console.log('Speech recognition not supported in this browser.');
        }
    </script>
</body>
</html>

